#!/usr/bin/env bash

declare -r script_path="$(pwd)/${0}"
declare -r dotfiles_root_path="$(dirname ${script_path})"

function main {
  update
  link_all
}

function update {
  update_git_submodules
}

function update_git_submodules {
  git submodule update --init --merge --remote
}

function link_all {
  setup_git
  setup_shell
  setup_tmux
  setup_vim

  if [[ ${OSTYPE} == darwin* ]]; then
    link macos/key_binding.dict ~/Library/KeyBindings/DefaultKeyBinding.dict
  fi
}

function setup_git {
  link git/gitconfig ~/.gitconfig
  link git/gitignore ~/.gitignore
}

function setup_shell {
  link shell/zshrc ~/.zshrc
}

function setup_tmux {
  link tmux/plugins ~/.tmux/plugins
  link tmux/tmux.conf ~/.tmux.conf
}

function setup_vim {
  link vim/plugins/vim-surround ~/.vim/pack/default/start/vim-surround
  link vim/vimrc ~/.vim/vimrc
}

function link {
  declare -r source="${dotfiles_root_path}/${1}"
  declare -r target="${2}"

  if [[ -L ${target} && $(readlink ${target}) == ${source} ]]; then
    echo "${target} is already linked"
    return
  fi

  if [[ -L ${target} || -e ${target} ]]; then
    backup ${target}
  fi

  declare -r target_directory="$(dirname ${target})"
  if [[ ! -d ${target_directory} ]]; then
    mkdir -p ${target_directory}
  fi

  ln -s ${source} ${target}
  echo "Created a symbolic link from ${target} to ${source}"
}

function backup() {
  declare -r backup_directory="${HOME}/.dotfiles/backups"
  declare -r file_to_backup="${1}"

  if [[ ! -d ${backup_directory} ]]; then
    mkdir -p ${backup_directory}
  fi

  local backup_file="${backup_directory}/$(basename ${file_to_backup})_$(date +%Y%m%d%H%M%S)"
  mv ${file_to_backup} ${backup_file}
  echo "Moved ${file_to_backup} to ${backup_file}"
}

main $@
